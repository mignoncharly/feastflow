# Generated by Django 5.2 on 2025-05-19 12:00

import apps.events.models
import django.db.models.deletion
import timezone_field.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PredefinedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('image', models.ImageField(upload_to=apps.events.models.predefined_image_upload_path, verbose_name='Image')),
                ('image_type', models.CharField(choices=[('event', 'Event'), ('category', 'Category'), ('item', 'Item'), ('all', 'All Types')], default='all', help_text='Type of content this image can be used for', max_length=10, verbose_name='Image Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Predefined Image',
                'verbose_name_plural': 'Predefined Images',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('start_time', models.TimeField(default='00:00', verbose_name='Start time')),
                ('end_time', models.TimeField(default='23:59', verbose_name='End time')),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/', verbose_name='Image')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Location')),
                ('timezone', timezone_field.fields.TimeZoneField(default='UTC', verbose_name='Timezone')),
                ('event_type', models.CharField(choices=[('association', 'Association'), ('grill_bbq', 'Grill/BBQ'), ('church', 'Church Community'), ('wedding', 'Wedding'), ('birthday', 'Birthday'), ('corporate', 'Corporate Event')], default='association', max_length=20, verbose_name='Event Type')),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('upcoming', 'Upcoming'), ('completed', 'Completed')], default='upcoming', max_length=10, verbose_name='Status')),
                ('popularity', models.PositiveIntegerField(default=0, verbose_name='Popularity')),
                ('access_mode', models.CharField(choices=[('public', 'Public - Anyone can contribute'), ('code', 'Code Required - Require an access code to contribute'), ('invite', 'Invite Only - Only people with invite links can contribute')], default='public', help_text='Control who can contribute to this event', max_length=10, verbose_name='Access Mode')),
                ('access_code', models.CharField(blank=True, help_text='Access code required to contribute to this event', max_length=20, verbose_name='Access Code')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL, verbose_name='Organizer')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContributionLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Code')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contribution_links', to='events.event', verbose_name='Event')),
            ],
            options={
                'verbose_name': 'Contribution Link',
                'verbose_name_plural': 'Contribution Links',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', verbose_name='Image')),
                ('category_type', models.CharField(choices=[('side_dish', 'Side Dish'), ('cutlery', 'Cutlery'), ('dessert', 'Dessert'), ('meat', 'Meat'), ('fruits', 'Fruits'), ('vegetables', 'Vegetables'), ('drinks', 'Drinks'), ('grill_accessories', 'Grill Accessories'), ('good_vibes', 'Good Vibes'), ('salad', 'Salad'), ('sauce', 'Sauce')], default='side_dish', max_length=20, verbose_name='Category Type')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='events.event', verbose_name='Event')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('required_quantity', models.PositiveIntegerField(default=1, verbose_name='Required quantity')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('image', models.ImageField(blank=True, null=True, upload_to='item_images/', verbose_name='Image')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='events.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['status', 'start_date'], name='events_even_status_dfba18_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('event', 'slug')},
        ),
    ]
